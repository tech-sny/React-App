[{"C:\\React-App\\src\\index.js":"1","C:\\React-App\\src\\App.js":"2","C:\\React-App\\src\\Component\\ChildFormComponent.js":"3","C:\\React-App\\src\\Component\\DemoComponent.js":"4"},{"size":425,"mtime":1674892287100,"results":"5","hashOfConfig":"6"},{"size":3997,"mtime":1674892287092,"results":"7","hashOfConfig":"6"},{"size":2188,"mtime":1674892287092,"results":"8","hashOfConfig":"6"},{"size":2137,"mtime":1674892287093,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"1h0y5zh",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"C:\\React-App\\src\\index.js",["26","27"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\n","C:\\React-App\\src\\App.js",["28","29"],[],"import DemoComponent from \"./Component/DemoComponent\";\r\nimport \"./Component/DemoCss.css\";\r\nimport { useState } from \"react\";\r\nimport iron from \"./image/iron.jpg\";\r\nimport ChildFormComponent from \"./Component/ChildFormComponent\";\r\nimport { Button, Form, } from \"react-bootstrap\";\r\n\r\nfunction App() {\r\n  var [count, setCount] = useState(0);\r\n  const aas = `count value ${count}`;\r\n  const [a, b] = useState(aas);\r\n  const onClickFunctiin = () => {\r\n    if (count % 2 === 0) {\r\n      setCount(count + 1);\r\n      b(`button clicked ${count}`);\r\n    } else {\r\n      setCount(count + 1);\r\n      b(`button clicked ${count}`);\r\n    }\r\n  };\r\n  const as2 = \"touch me\";\r\n  const [a1, b1] = useState(as2);\r\n  const onWaiting = () => {\r\n    b1(\"mat chhuo na !\");\r\n  };\r\n\r\n  const resetCountVar = () => {\r\n    setCount(0);\r\n    b(`reseted to 0`);\r\n  };\r\n\r\n  const pointerLeave = () => {\r\n    b1(\"ab chhu ke dikha\");\r\n  };\r\n\r\n  const name = \"\";\r\n  const salary = \"\";\r\n  const date = \"\";\r\n  const [getname, setName] = useState(name);\r\n  const [getSalary, setSalary] = useState(salary);\r\n  const [getDate, setDate] = useState(date);\r\n  const data = { name: getname, salary: getSalary, date: getDate };\r\n  const [nameCss,setNameCss]=useState(\"pink\");\r\n  const [salaryCss,setSalaryCss]=useState(\"pink\");\r\n  const [dateCss,setDateCss]=useState(\"pink\");\r\n  const nameHandler = (event) => {\r\n    setName(event.target.value);\r\n    setNameCss(\"aqua\");\r\n    console.log(getname);\r\n    \r\n  };\r\n  const dateHandler = (event) => {\r\n    setDate(event.target.value);\r\n    setDateCss(\"aqua\");\r\n    console.log(getDate);\r\n  };\r\n  const salaryHandler = (event) => {\r\n    setSalary(event.target.value);\r\n    setSalaryCss(\"aqua\");\r\n    console.log(getSalary);\r\n  };\r\n\r\n  const submitHamdler = (event) => {\r\n    event.preventDefault();\r\n    console.log(data);\r\n  };\r\n  var location = \"\";\r\n  var country = \"\";\r\n  var pincode = \"\";\r\n  const [getLocation, setLocation] = useState(location);\r\n  const [getCountry, setCountry] = useState(country);\r\n  const [getPincode, setPincode] = useState(pincode);\r\n  const ChildComHandler = (pars) => {\r\n    setLocation(pars.location);\r\n    setCountry(pars.country);\r\n    setPincode(pars.pincode);\r\n  };\r\n\r\n  const clearHandler = () => {\r\n    setName(\"\");\r\n    setDate(\"\");\r\n    setSalary(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <title>My App</title>\r\n      <button\r\n        onClick={onClickFunctiin}\r\n        onPointerMove={onWaiting}\r\n        onPointerLeave={pointerLeave}\r\n      >\r\n        {a1}\r\n      </button>\r\n\r\n      <button onClick={resetCountVar}>reset the value</button>\r\n      <h1>{a}</h1>\r\n      <a href=\"https:\\\\www.google.com\" target=\"_blank\">\r\n        google karna hai\r\n      </a>\r\n      <div>{<ChildFormComponent onChildSave={ChildComHandler} />}</div>\r\n      <Form onSubmit={submitHamdler}>\r\n        <Form.Group>\r\n          <Form.Label style={{backgroundColor:'pink'}}>Main form</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            style={{backgroundColor:nameCss}}\r\n            onChange={nameHandler}\r\n            value={getname}\r\n            placeholder=\"Enter name\"\r\n          />\r\n          <Form.Control\r\n            type=\"number\"\r\n            style={{ backgroundColor: salaryCss }}\r\n            onChange={salaryHandler}\r\n            value={getSalary}\r\n            placeholder=\"Enter salary\"\r\n          />\r\n          <Form.Control\r\n            type=\"date\"\r\n            style={{ backgroundColor: dateCss }}\r\n            onChange={dateHandler}\r\n            value={getDate}\r\n          />\r\n          <Button type=\"submit\">save</Button>\r\n        </Form.Group>\r\n      </Form>\r\n      <>\r\n        {\r\n          <DemoComponent\r\n            name={getname}\r\n            salary={getSalary}\r\n            date={getDate}\r\n            location={getLocation}\r\n            country={getCountry}\r\n            pincode={getPincode}\r\n          />\r\n        }\r\n      </>\r\n      <button onClick={clearHandler}>Clear All</button>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\React-App\\src\\Component\\ChildFormComponent.js",["30"],[],"import { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport ChildComHandler from \"../App\";\r\n\r\nconst ChildFormComponent = (props) => {\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    props.onChildSave({\r\n      location: getLocation,\r\n      country: getCountry,\r\n      pincode: getPincode,\r\n    });\r\n    console.log({\r\n      location: getLocation,\r\n      country: getCountry,\r\n      pincode: getPincode,\r\n    });\r\n    setCountry(\"\");\r\n    setLocation(\"\");\r\n    setPincode(\"\");\r\n  };\r\n  const location = \"\";\r\n  const pincode = \"\";\r\n  const country = \"\";\r\n  const [getLocation, setLocation] = useState(location);\r\n  const [getPincode, setPincode] = useState(pincode);\r\n  const [getCountry, setCountry] = useState(country);\r\n  const locationHandler = (event) => {\r\n    setLocation(event.target.value);\r\n  };\r\n  const pincodeHandler = (event) => {\r\n    setPincode(event.target.value);\r\n  };\r\n  const countryHandler = (event) => {\r\n    setCountry(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label style={{backgroundColor:\"pink\"}}>child form</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            style={{backgroundColor:\"pink\"}}\r\n            onChange={locationHandler}\r\n            value={getLocation}\r\n            placeholder=\"Enter location\"\r\n          />\r\n          <Form.Control\r\n            type=\"number\"\r\n            style={{backgroundColor:\"pink\"}}\r\n            onChange={pincodeHandler}\r\n            value={getPincode}\r\n            placeholder=\"Enter pincode\"\r\n          />\r\n          <Form.Control\r\n            type=\"text\"\r\n            style={{backgroundColor:\"pink\"}}\r\n            onChange={countryHandler}\r\n            value={getCountry}\r\n            placeholder=\"Enter country\"\r\n          />\r\n          <Button type=\"submit\">save</Button>\r\n        </Form.Group>\r\n      </Form>\r\n      <h2 style={{ color: \"lightYellow\" }}>{getCountry}</h2>\r\n      <h2 style={{ color: \"lightYellow\" }}>{getLocation}</h2>\r\n      <h2 style={{ color: \"lightYellow\" }}>{getPincode}</h2>\r\n    </div>\r\n  );\r\n};\r\nexport default ChildFormComponent;\r\n","C:\\React-App\\src\\Component\\DemoComponent.js",["31","32"],[],"import { useState } from \"react\";\r\nimport \"./DemoCss.css\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { FloatingLabel } from \"react-bootstrap\";\r\nimport FormCheckLabel from \"react-bootstrap/esm/FormCheckLabel\";\r\n\r\nfunction DemoComponent(props) {\r\n  const list = [\r\n    {\r\n      name: \"anand\",\r\n      location: \"yhh\",\r\n      salary: \"8545\",\r\n      date: \"2022-12-26\",\r\n      country: \"india\",\r\n      pincode: \"84545\",\r\n    },\r\n  ];\r\n  const [getList, setList] = useState(list);\r\n  const saveDataHandler = () => {\r\n    setList((prevState) => {\r\n      const a = [\r\n        {\r\n          name: props.name,\r\n          location: props.location,\r\n          salary: props.salary,\r\n          country: props.country,\r\n          pincode: props.pincode,\r\n          date: props.date,\r\n        },\r\n      ];\r\n      return [...prevState, ...a];\r\n    });\r\n\r\n    console.log(getList);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Name : {props.name}</h2>\r\n      <h2>Salary : {props.salary}</h2>\r\n      <h2>Date : {props.date}</h2>\r\n      <h2>Location : {props.location}</h2>\r\n      <h2>Country : {props.country}</h2>\r\n      <h2>Pincode : {props.pincode}</h2>\r\n      <h2 style={{color:'green'}}>want to submit then click save button</h2>\r\n      <button onClick={saveDataHandler}>Save All</button>\r\n      <>{getList.map((x) =>  (\r\n                <ListGroup key={x} horizontal={x}>\r\n                  <h3>{x.date}</h3>\r\n                  <ListGroup.Item style={{backgroundColor:\"rgb(110, 239, 63)\"}}>Name : {x.name}</ListGroup.Item>\r\n                  <ListGroup.Item style={{backgroundColor:\"rgb(110, 239, 63)\"}}>Location : {x.location }</ListGroup.Item>\r\n                  <ListGroup.Item style={{backgroundColor:\"rgb(110, 239, 63)\"}}>Salary : {x.salary}</ListGroup.Item>\r\n                  <ListGroup.Item style={{backgroundColor:\"rgb(110, 239, 63)\"}}>Country : {x.country}</ListGroup.Item>\r\n                  <ListGroup.Item style={{backgroundColor:\"rgb(110, 239, 63)\"}}>Pincode : {x.pincode}</ListGroup.Item>\r\n                </ListGroup>\r\n              )\r\n            )}</>\r\n            \r\n    </div>\r\n  );\r\n}\r\nexport default DemoComponent;\r\n",{"ruleId":"33","severity":1,"message":"34","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":9},{"ruleId":"33","severity":1,"message":"37","line":3,"column":8,"nodeType":"35","messageId":"36","endLine":3,"endColumn":14},{"ruleId":"33","severity":1,"message":"38","line":4,"column":8,"nodeType":"35","messageId":"36","endLine":4,"endColumn":12},{"ruleId":"39","severity":1,"message":"40","line":97,"column":7,"nodeType":"41","messageId":"42","endLine":97,"endColumn":56,"fix":"43"},{"ruleId":"33","severity":1,"message":"44","line":3,"column":8,"nodeType":"35","messageId":"36","endLine":3,"endColumn":23},{"ruleId":"33","severity":1,"message":"45","line":4,"column":10,"nodeType":"35","messageId":"36","endLine":4,"endColumn":23},{"ruleId":"33","severity":1,"message":"46","line":5,"column":8,"nodeType":"35","messageId":"36","endLine":5,"endColumn":22},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","'iron' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"47","text":"48"},"'ChildComHandler' is defined but never used.","'FloatingLabel' is defined but never used.","'FormCheckLabel' is defined but never used.",[2654,2654]," rel=\"noreferrer\""]